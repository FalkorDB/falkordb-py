name: Test
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Test with Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python: ['3.8', '3.10', '3.11']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Run docker-compose for redis standalone instance
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ./standalone-compose

      - name: Run docker-compose for redis replication instance
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ./sentinel-compose

      - name: Run docker-compose for redis cluster instance
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: ./cluster-compose
      
      - name: Add entries to the host file to correctly resolve service names
        run: |
          sudo echo "127.0.0.1 redisstandalone" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 sentinel1" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 redis-sentinel" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 redis-sentinel2" | sudo tee -a /etc/hosts
          for i in node{0..5};do
            echo "127.0.0.1 $i" | sudo tee -a /etc/hosts
          done

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run Tests
        run: poetry run pytest --cov --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: matrix.python == '3.10' && matrix.platform != 'macos-11'
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
